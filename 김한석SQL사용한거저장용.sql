INSERT INTO BOARD_TYPE
VALUES(
'6',
'샘플 게시판6'
);


SELECT * FROM BOARD_TYPE bt ;

UPDATE BOARD_TYPE SET BOARD_NAME = '샘플 게시판6' WHERE BOARD_CODE = '6';

COMMIT;

SELECT BOARD_NAME
FROM BOARD_TYPE
WHERE BOARD_CODE = 1;

CREATE SEQUENCE SEQ_BOARD_NO NOCACHE;

SELECT * FROM BOARD;

BEGIN
	FOR I IN 1..2000 LOOP
		
		INSERT INTO "BOARD"
		VALUES(SEQ_BOARD_NO.NEXTVAL,
					 SEQ_BOARD_NO.CURRVAL || '번째 게시글',
					 SEQ_BOARD_NO.CURRVAL || '번째 게시글 내용 입니다',
					 DEFAULT, DEFAULT, DEFAULT, DEFAULT,
					 CEIL( DBMS_RANDOM.VALUE(0,3) ),
					 4
		);
		
	END LOOP;
END;

SELECT COUNT(*) FROM BOARD WHERE BOARD_CODE = 3;

COMMIT;


SELECT * FROM board;

SELECT COUNT(*)
FROM "BOARD"
WHERE BOARD_DEL_FL = 'N'
AND BOARD_CODE = 1;

SELECT * FROM board WHERE BOARD_NO = 2004;
SELECT * FROM MEMBER;
SELECT * FROM BOARD_LIKE bl ;
SELECT * FROM BOARD_IMG bi ;



SELECT
	BOARD_NO,
	BOARD_TITLE,
	BOARD_CONTENT,
	BOARD_CODE,
	READ_COUNT,
	MEMBER_NO,
	MEMBER_NICKNAME,
	PROFILE_IMG,

	TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
	TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')
	BOARD_UPDATE_DATE,

	(
	SELECT
		COUNT(*)
	FROM
		"BOARD_LIKE"
	WHERE
		BOARD_NO = 1) LIKE_COUNT,

	(
	SELECT
		IMG_PATH || IMG_RENAME
	FROM
		"BOARD_IMG"
	WHERE
		BOARD_NO = 1
		AND IMG_ORDER = 0) THUMBNAIL,
	
	(
	SELECT
		COUNT(*)
	FROM
		"BOARD_LIKE"
	WHERE
		MEMBER_NO = 4
		AND BOARD_NO = 2004
	) LIKE_CHECK
FROM
	"BOARD"
JOIN "MEMBER"
		USING(MEMBER_NO)
WHERE
	BOARD_DEL_FL = 'N'
	AND
	BOARD_CODE = 1
	AND BOARD_NO = 2004;

SELECT * FROM "COMMENT" c ;


SELECT *
FROM USER_SEQUENCES;

CREATE SEQUENCE SEQ_IMG_NO NOCACHE;

-- SEQ_IMG_NO 시퀀스의 다음 값을 반환하는 함수 생성
CREATE OR REPLACE FUNCTION NEXT_IMG_NO

-- 반환형
RETURN NUMBER

-- 사용할 변수
IS IMG_NO NUMBER;

BEGIN 
	SELECT SEQ_IMG_NO.NEXTVAL 
	INTO IMG_NO
	FROM DUAL;

	RETURN IMG_NO;
END;
;


SELECT NEXT_IMG_NO() FROM DUAL;

SELECT *
FROM BOARD_IMG bi ;

SELECT BOARD_NO, BOARD_TITLE,
	BOARD_CONTENT, BOARD_CODE, READ_COUNT,
	MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,

	TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
	TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')
	BOARD_UPDATE_DATE,

	(SELECT COUNT(*)
	FROM "BOARD_LIKE"
	WHERE BOARD_NO = 2009) LIKE_COUNT,

	(SELECT IMG_PATH || IMG_RENAME
	FROM "BOARD_IMG"
	WHERE BOARD_NO = 2009
	AND IMG_ORDER = 0) THUMBNAIL,
	
	(
	SELECT
	COUNT(*)
	FROM
	"BOARD_LIKE"
	WHERE
	MEMBER_NO = 4
	AND BOARD_NO = 2009
	) LIKE_CHECK

	FROM "BOARD"
	JOIN "MEMBER" USING(MEMBER_NO)
	WHERE BOARD_DEL_FL = 'N'
	AND
	BOARD_CODE = 1
	AND BOARD_NO = 2009;


SELECT * FROM MEMBER;
SELECT * FROM BOARD_IMG bi ;

-- 시퀀스 조회하는 구문
SELECT sequence_owner, sequence_name, min_value, max_value, increment_by, cycle_flag
FROM all_sequences
WHERE sequence_owner NOT IN ('SYS', 'SYSTEM')
ORDER BY sequence_owner, sequence_name;

SELECT * FROM MEMBER;


SELECT * FROM BOARD_LIKE bl ;



		INSERT INTO "BOARD_LIKE"(MEMBER_NO, BOARD_NO)
		VALUES(4, 2000);
	
			DELETE FROM "BOARD_LIKE"
		WHERE MEMBER_NO = 4
		AND BOARD_NO = 2037;
	
	SELECT *
	FROM "COMMENT" c 
	WHERE BOARD_NO = '2041';

ROLLBACK;



SELECT BOARD_NO, BOARD_TITLE,
	BOARD_CONTENT, BOARD_CODE, READ_COUNT,
	MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,

	TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
	TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')
	BOARD_UPDATE_DATE,

	(SELECT COUNT(*)
	FROM "BOARD_LIKE"
	WHERE BOARD_NO = #{boardNo}) LIKE_COUNT,

	(SELECT IMG_PATH || IMG_RENAME
	FROM "BOARD_IMG"
	WHERE BOARD_NO = #{boardNo}
	AND IMG_ORDER = 0) THUMBNAIL,
	
	(
	SELECT
	COUNT(*)
	FROM
	"BOARD_LIKE"
	WHERE
	MEMBER_NO = #{memberNo}
	AND BOARD_NO = #{boardNo};

{boardCode=1, boardNo=2037}


	SELECT
	COUNT(*)
	FROM
	"BOARD_LIKE"
	WHERE
	MEMBER_NO = 4
	AND BOARD_NO = 2037;

SELECT * FROM BOARD_LIKE;
DELETE FROM BOARD_LIKE WHERE MEMBER_NO = 7;

COMMIT;





SELECT BOARD_NO, BOARD_TITLE,
	BOARD_CONTENT, BOARD_CODE, READ_COUNT,
	MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,

	TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
	TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')
	BOARD_UPDATE_DATE,

	(SELECT COUNT(*)
	FROM "BOARD_LIKE"
	WHERE BOARD_NO = 2016) LIKE_COUNT,

	(SELECT IMG_PATH || IMG_RENAME
	FROM "BOARD_IMG"
	WHERE BOARD_NO = 2016
	AND IMG_ORDER = 0) THUMBNAIL,
	
	(
	SELECT
	COUNT(*)
	FROM
	"BOARD_LIKE"
	WHERE
	MEMBER_NO = 4
	AND BOARD_NO = 2016
	) LIKE_CHECK

	FROM "BOARD"
	JOIN "MEMBER" USING(MEMBER_NO)
	WHERE BOARD_DEL_FL = 'N'
	AND
	BOARD_CODE = 1
	AND BOARD_NO = 2016;
	
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND MEMBER_NO = 4;
	
	SELECT * FROM BOARD;

	SELECT * FROM MEMBER;	

SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,

    (SELECT
    COUNT(*)
    FROM "COMMENT" C
    WHERE C.BOARD_NO = B.BOARD_NO
    AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,

    (SELECT COUNT(*)
    FROM "BOARD_LIKE" L
    WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
   
    CASE
    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'

    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE)* 24 * 60) || '분 전'

    WHEN SYSDATE - BOARD_WRITE_DATE < 1
    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'

    ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')

    END BOARD_WRITE_DATE
   
FROM "BOARD" B
JOIN "MEMBER" USING(MEMBER_NO)
WHERE BOARD_DEL_FL = 'N'
AND MEMBER_NO = 4
ORDER BY BOARD_NO DESC;

SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT, BOARD_CODE,

    (SELECT
    COUNT(*)
    FROM "COMMENT" C
    WHERE C.BOARD_NO = B.BOARD_NO
    AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,

    (SELECT COUNT(*)
    FROM "BOARD_LIKE" L
    WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
    CASE
    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'

    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE)* 24 * 60) || '분 전'

    WHEN SYSDATE - BOARD_WRITE_DATE < 1
    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'

    ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')

    END BOARD_WRITE_DATE
FROM "BOARD" B
JOIN "MEMBER" USING(MEMBER_NO)
WHERE BOARD_DEL_FL = 'N'
AND MEMBER_NO = 4
ORDER BY BOARD_NO DESC




SELECT COUNT(*)
		
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode};
		


SELECT * FROM BOARD;


















